<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF-RSA</title>
      <link href="/CTF-RSA/"/>
      <url>/CTF-RSA/</url>
      
        <content type="html"><![CDATA[<p><img src="/CTF-RSA/rsa.png" alt></p><blockquote><p><strong>RSA加密算法，一种非对称加密算法。用途：数字签名，身份认证等</strong></p></blockquote><h2 id="0x00-简单理解RSA算法"><a href="#0x00-简单理解RSA算法" class="headerlink" title="0x00 简单理解RSA算法"></a>0x00 简单理解RSA算法</h2><blockquote><p>最大素数：p、q，p与q互质，p、q越大越安全<br>例子：p=53，q=59<br>模数：n，n=p*q，n的二进制表示时的位数就是密钥长度<br>例子：n=53*59=3127=1100 0011 0111，所以密钥长度为12位，实际中的算法是1024位或2048位</p><p>欧拉函数：φ =(p-1)*(q-1)<br>例子：φ =(53-1)(59-1)=3016</p><p>e：与φ互质，且1&lt;e&lt;φ<br>随机取e=41，e不要取3015，这样公钥私钥值一样</p><p>e的模反数：d<br>存在：(e*d)%φ=1，即e*d-1=xφ，x是整数，这里可以得d=1177，x=16</p><p>公钥：（n,e），仅公钥是公开的，其他数字都不公开<br>公钥：（3127,41）</p><p>私钥：（n,d）<br>私钥：（3127,1177）</p><p>例子：汉字“中”，utf-8编码为[e4 b8 ad]，转10进制[228 184 173]<br><img src="/CTF-RSA/1.png" alt><br>明文：m=pow(c,d,n)=c^d%n<br>密文：c=pow(m,e,n)=m^e%n<br>pow(x,y,z)：x的y次方再取模，等效pow(x,y)%z，%取余<br>明文228的密文算法：228^41%3127=521<br>184：184^41%3127=1071<br>173：173^41%3127=1322<br>密文521的解法：521^1177%3127=228<br>1071：1071^1177%3127=184<br>1322：1322^1177%3127=173</p><p>5^3 mod 7=125 mod 7=6<br>a ≡ b ( mod c)，11%3余2,5%3余2<br>11 ≡ 5 ( mod 3)<br>dp≡d mod (p−1),即(dp-d)/(p-1)=d,</p><p>公钥加密文：flag.enc<br>公钥文件：pubkey.pem<br>私钥文件：private.key</p></blockquote><h2 id="0x01-RSA-pem文件格式"><a href="#0x01-RSA-pem文件格式" class="headerlink" title="0x01 RSA pem文件格式"></a>0x01 RSA pem文件格式</h2><p><strong>PKCS#1私钥格式文件</strong></p><ol><li>—–BEGIN RSA PRIVATE KEY—–</li><li>—–END RSA PRIVATE KEY—–</li></ol><p><strong>PKCS#8私钥格式文件</strong></p><ol><li>—–BEGIN  PRIVATE KEY—–</li><li>—–END PRIVATE KEY—–</li></ol><p><strong>PEM公钥格式文件</strong></p><ol><li>—–BEGIN PUBLIC KEY—–</li><li>—–END PUBLIC KEY—–</li></ol><p><strong>PEM RSA PublicKey公钥格式文件</strong></p><ol><li>—–BEGIN RSA PUBLIC KEY—–</li><li>—–END RSA PUBLIC KEY—–</li></ol><p><strong>RSA相关工具</strong></p><ul><li>RSATool2v17：N比特位数小于256</li><li><a href="https://ipcmen.com/openssl" target="_blank" rel="noopener">openssl</a></li><li><a href="https://github.com/Ganapati/RsaCtfTool" target="_blank" rel="noopener">RsaCtfTool</a></li><li><a href="http://factordb.com/" target="_blank" rel="noopener">在线分解模数N：http://factordb.com/</a></li><li>离线工具：msieve、yafu</li></ul><h2 id="0x02-解RSA题思路"><a href="#0x02-解RSA题思路" class="headerlink" title="0x02 解RSA题思路"></a>0x02 解RSA题思路</h2><ol><li>e较大：wienner攻击</li><li>e较小：直接爆破</li><li>低加密指数广播攻击：相同低指数的e和多个相同的消息m</li><li>Coppersmith定理攻击：只有部分高位的p或q</li><li>共模攻击：相同n，相同m</li></ol><h2 id="0x03-判断是否为质数"><a href="#0x03-判断是否为质数" class="headerlink" title="0x03 判断是否为质数"></a>0x03 判断是否为质数</h2><ol><li>import gmpy2</li><li>gmpy2.is_prime(11)</li><li><img src="/CTF-RSA/6.png" alt></li><li>&gt;&gt;&gt; import Crypto</li><li>&gt;&gt;&gt; from Crypto.Util import number</li><li>&gt;&gt;&gt; Crypto.Util.number.isPrime(11)</li><li>1</li><li>&gt;&gt;&gt; Crypto.Util.number.isPrime(10)</li><li>False</li><li><img src="/CTF-RSA/7.png" alt></li></ol><h2 id="0x04-最大公约数"><a href="#0x04-最大公约数" class="headerlink" title="0x04 最大公约数"></a>0x04 最大公约数</h2><ol><li>import gmpy2</li><li>gmpy2.gcd(a,b)</li></ol><h2 id="0x05-n分解"><a href="#0x05-n分解" class="headerlink" title="0x05 n分解"></a>0x05 n分解</h2><p><strong>yafu</strong></p><ol><li><img src="/CTF-RSA/4.png" alt></li><li>n过长时，把n写入txt：yafu.exe “factor(@)” -batchfile data.txt #注意，一定要换行，即后面加个回车</li></ol><p><strong>在线分解模数N</strong></p><ol><li><img src="/CTF-RSA/8.png" alt> </li></ol><h2 id="0x06-使用openssl处理"><a href="#0x06-使用openssl处理" class="headerlink" title="0x06 使用openssl处理"></a>0x06 使用openssl处理</h2><p><strong>pem?n?e</strong> </p><ol><li>openssl rsa -pubin -text -modulus -in warmup -in public.key #分解公钥文件得n、e</li><li><img src="/CTF-RSA/15.png" alt> </li></ol><h2 id="0x07-使用RsaCtfTool处理"><a href="#0x07-使用RsaCtfTool处理" class="headerlink" title="0x07 使用RsaCtfTool处理"></a>0x07 使用RsaCtfTool处理</h2><p><strong>n/e?pem</strong></p><ol><li>python RsaCtfTool.py –createpub -n 103461035900816914121390101299049044413950405173712170434161686539878160984549 -e 65537 &gt; public.pem</li><li><img src="/CTF-RSA/10.png" alt> </li></ol><p><strong>pem/enc?m</strong></p><ol><li>python RsaCtfTool.py –publickey 公钥文件 –uncipherfile 加密文件</li><li><img src="/CTF-RSA/9.png" alt> </li></ol><p><strong>pem?key</strong></p><ol><li>python RsaCtfTool.py –publickey 公钥文件 –private [&gt; private.key(密钥文件)]</li><li><img src="/CTF-RSA/16.png" alt></li></ol><p><strong>key?p?q?e?d?n</strong></p><ol><li><img src="/CTF-RSA/16.png" alt></li><li>python RsaCtfTool.py –key private.key –dumpkey #私钥分解出n、p、q、e、d</li><li><img src="/CTF-RSA/17.png" alt></li></ol><h2 id="0x08-CTF例子"><a href="#0x08-CTF例子" class="headerlink" title="0x08 CTF例子"></a>0x08 CTF例子</h2><p><strong>n/c/e?m</strong></p><ol><li><p>e=1，即没加密，密文就是明文</p></li><li><p><img src="/CTF-RSA/11.png" alt></p></li><li><p>e=65537,n超大</p></li><li><p>n分解：yafu-x64.exe “factor(@)” -batchfile n.txt</p></li><li><p><img src="/CTF-RSA/13.png" alt></p></li><li><p>np></li><li><p>p = 310935513029228809998830208036655366162721470228774287453148308675193510132489142448801010943658159980501154153084396100667001391643762749806500051502679498536716532334917842894939889468693960937309663256592497965458780801192062835123429808544757340971089756707788360038227894054989413747980<br>167536893779923551227744017809301855984582408943622461942486239113822841696775958645014753081946441406022729616992302829930205076689399802050792392219242304302303180769915076199603301447453070225380248784444587175874466015595462920262453189072935846093201153746322352707956339337553509285375982422142<br>16674496409625928997877221</p></li><li><p>q = 310935513029228809998830208036655366162721470228774287453148308675193510132489142448801010943658159980501154153084396100667001391643762749806500051502679498536716532334917842894939889468693960937309663256592497965458780801192062835123429808544757340971089756707788360038227894054989413747980<br>167536893779923551227744017809301855984582408943622461942486239113822841696775958645014753081946441406022729616992302829930205076689399802050792392219242304302303180769915076199603301447453070225380248784444587175874466015595462920262453189072935846093201153746322352707956339337553509285375982422142<br>16674496409625928797450473</p></li><li><p><img src="/CTF-RSA/14.png" alt></p></li></ol><p><strong>n/c/d?m</strong></p><ol><li>print hex(pow(c,d,N))[2:-1].decode(‘hex’)</li><li><img src="/CTF-RSA/12.png" alt></li></ol><p><strong>n/e1/e2/c1/c2?m</strong></p><ol><li>import gmpy2</li><li>gcd,a,b=gmpy2.gcdext(e1,e2)</li><li>m=gmpy2.powmod(c1,a,n)*gmpy2.powmod(c2,b,n)%n</li></ol><p><strong>p/q/e?d</strong></p><ol><li>import gmpy2</li><li>p =gmpy2.mpz(18443)</li><li>q =gmpy2.mpz(49891)</li><li>e =gmpy2.mpz(19)</li><li>phi_n= (p - 1) * (q - 1)</li><li>d = gmpy2.invert(e, phi_n)</li><li>print (d)<br><img src="/CTF-RSA/2.png" alt></li></ol><p><strong>p/q/e/c?m</strong></p><ol><li>import gmpy2</li><li>#N = 103461035900816914121390101299049044413950405173712170434161686539878160984549</li><li>p = 366669102002966856876605669837014229419</li><li>q = 282164587459512124844245113950593348271</li><li>c = 0xad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35</li><li>e = 65537</li><li></li><li>d = gmpy2.invert(e,(p-1)*(q-1))</li><li>#print d</li><li>#d=91646299298871237857836940212608056141193465208586711901499120163393577626813</li><li>m = gmpy2.powmod(c,d,p*q)</li><li>#print m</li><li>#m=185534734614696481020381637136165435809958101675798337848243069</li><li>#hex(m)=0x73756374667b50776e5f405f68756e647265645f79656172737d</li><li>print hex(m)[2:].decode(‘hex’)<br><img src="/CTF-RSA/3.png" alt></li></ol><p><strong>p/q/e/c?m</strong></p><ol><li>p = 169524110085046954319747170465105648233168702937955683889447853815898670069828343980818367807171215202643149176857117014826791242142210124521380573480143683660195568906553119683192470329413953411905742074448392816913467035316596822218317488903257069007949137629543010054246885909276872349326142152285347048927</li><li>q = 170780128973387404254550233211898468299200117082734909936129463191969072080198908267381169837578188594808676174446856901962451707859231958269401958672950141944679827844646158659922175597068183903642473161665782065958249304202759597168259072368123700040163659262941978786363797334903233540121308223989457248267</li><li>e = 65537</li><li>c = 4531850464036745618300770366164614386495084945985129111541252641569745463086472656370005978297267807299415858324820149933137259813719550825795569865301790252501254180057121806754411506817019631341846094836070057184169015820234429382145019281935017707994070217705460907511942438972962653164287761695982230728969508370400854478181107445003385579261993625770566932506870421547033934140554009090766102575218045185956824020910463996496543098753308927618692783836021742365910050093343747616861660744940014683025321538719970946739880943167282065095406465354971096477229669290277771547093476011147370441338501427786766482964</li><li></li><li>#计算d</li><li>def egcd(a, b): #gcd最大公约数</li><li>if a == 0:</li><li>return (b, 0, 1)</li><li>else:</li><li>g, y, x = egcd(b % a, a)</li><li>return (g, x - (b // a) * y, y)</li><li></li><li>d = egcd((p - 1) * (q - 1), e)[2]</li><li>if d &lt; 0:</li><li>d += (p - 1) * (q - 1)</li><li></li><li>m = hex(pow(c,d,p*q))[2:-1].decode(‘hex’)</li><li>print m<br><img src="/CTF-RSA/5.png" alt></li></ol><p><strong>e/n/dp/c?m</strong></p><ol><li>import gmpy2</li><li>e=65537</li><li>n=9637571466652899741848142654451413405801976834328667418509217149503238513830870985353918314633160277580591819016181785300521866901536670666234046521697590230079161867282389124998093526637796571100147052430445089605759722456767679930869250538932528092292071024877213105462554819256136145385237821098127348787416199401770954567019811050508888349297579329222552491826770225583983899834347983888473219771888063393354348613119521862989609112706536794212028369088219375364362615622092005578099889045473175051574207130932430162265994221914833343534531743589037146933738549770365029230545884239551015472122598634133661853901</li><li>dp=81339405704902517676022188908547543689627829453799865550091494842725439570571310071337729038516525539158092247771184675844795891671744082925462138427070614848951224652874430072917346702280925974595608822751382808802457160317381440319175601623719969138918927272712366710634393379149593082774688540571485214097</li><li>c=5971372776574706905158546698157178098706187597204981662036310534369575915776950962893790809274833462545672702278129839887482283641996814437707885716134279091994238891294614019371247451378504745748882207694219990495603397913371579808848136183106703158532870472345648247817132700604598385677497138485776569096958910782582696229046024695529762572289705021673895852985396416704278321332667281973074372362761992335826576550161390158761314769544548809326036026461123102509831887999493584436939086255411387879202594399181211724444617225689922628790388129032022982596393215038044861544602046137258904612792518629229736324827</li><li></li><li>stuff=dp*e-1</li><li>for k in range(1,e):</li><li>if stuff%k==0:  #p should be an integer</li><li>p1=stuff//k+1</li><li>if n%p1==0: #p should divide n</li><li>p=p1</li><li>q=n//p</li><li>phi=(p-1)*(q-1)</li><li>d=gmpy2.invert(e,phi)</li><li>m=pow(c,d,n)</li><li>print bytearray.fromhex(hex(pow(c,d,n))[2:])</li><li><img src="/CTF-RSA/18.png" alt></li></ol><p><strong>pem/enc?m</strong></p><ol><li><img src="/CTF-RSA/19.png" alt></li></ol><h2 id="0x09-RSA安全要求"><a href="#0x09-RSA安全要求" class="headerlink" title="0x09 RSA安全要求"></a>0x09 RSA安全要求</h2><ol><li>定期更新密钥</li><li>不同用户使用不同模数n</li><li>p、q相差较大</li><li>e不可以太小</li><li>d不可以太小</li></ol><h2 id="0xFF-参考链接"><a href="#0xFF-参考链接" class="headerlink" title="0xFF 参考链接"></a>0xFF 参考链接</h2><ul><li><a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a></li><li><a href="https://www.freebuf.com/" target="_blank" rel="noopener">https://www.freebuf.com/</a></li><li><a href="https://www.jianshu.com/" target="_blank" rel="noopener">https://www.jianshu.com/</a></li><li><a href="https://www.jianshu.com/p/c945b0f0de0a" target="_blank" rel="noopener">https://www.jianshu.com/p/c945b0f0de0a</a></li><li><a href="https://blog.csdn.net/huanghelouzi/article/details/82974741" target="_blank" rel="noopener">https://blog.csdn.net/huanghelouzi/article/details/82974741</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
